
language: python

python:
  - { PATH: "{{Python37}}",
      VERSION: 3.7,
      DIST: std,
      PYINT: python3.7,
      PYTHONPATH: src,
      LD_LIBRARY_PATH: /usr/local/Python-3.7.2 }
  - { PATH: "{{Python38}}",
      VERSION: 3.8,
      DIST: std,
      PYINT: python3.8,
      PYTHONPATH: src,
      LD_LIBRARY_PATH: /usr/local/Python-3.8.1 }
  
virtualenv:
  - path: {{ospathjoin(root_path, pickname("$NAME_JENKINS", project_name + "_$VERSION_$DIST_$NAME"), "_venv")}}
  
install:
  - $PYINT -m pip install --upgrade pip
  - $PYINT -m pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ jyquickhelper pyquickhelper mlinsights --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install --no-cache-dir --no-deps --upgrade --index http://localhost:8067/simple/ onnxruntime_dnnl --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ skl2onnx onnx onnxconverter_common --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install --no-cache-dir --no-deps --index http://localhost:8067/simple/ mlprodict --extra-index-url=https://pypi.python.org/simple/
  - $PYINT -m pip install -r requirements.txt
  - $PYINT --version
  - $PYINT -m pip freeze

before_script:
  - $PYINT -u setup.py build_ext --inplace

script:
  - { CMD: "$PYINT -u setup.py unittests -g \".*BENCH.*\"", NAME: "UT" }
  - { CMD: "$PYINT -u setup.py unittests -e \".*BENCH.*onnx.*\" -g \".*ALL.*\"", NAME: "UT_BENCH_ONNX", TIMEOUT: 3600 }

after_script:
  - $PYINT -u setup.py bdist_wheel
  - if [ ${NAME} == "UT" ] then cp dist/*.whl {{root_path}}/../local_pypi/local_pypi_server fi

documentation:
  - if [ ${NAME} == "UT" ] then $PYINT -u setup.py build_sphinx fi
  - if [ ${NAME} == "UT" ] then cp -R -f _doc/sphinxdoc/build/html dist/html fi
