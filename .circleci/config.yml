version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7.0
    
    working_directory: ~/repo
    
    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          - v2-dependencies-

      - run:
          name: Install pandoc
          command: |
                    sudo apt-get update 
                    wget https://github.com/jgm/pandoc/releases/download/2.2.1/pandoc-2.2.1-1-amd64.deb
                    sudo dpkg -i pandoc-2.2.1-1-amd64.deb
          
      - run:
          name: Install tex
          command: |
                    sudo apt-get install -y texlive
                    sudo apt-get install -y texlive-latex-extra
                    sudo apt-get install -y dvipng
          
      - run:
          name: Install 7z, unrar
          command: |
                    sudo apt-get install -y p7zip-full
          
      - run:
          name: Install InkScape
          command: |
                    sudo apt-get install -y inkscape
          
      - run:
          name: Install graphviz
          command: |
                    sudo apt-get install -y graphviz
          
      - run:
          name: Install onnx
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo apt-get install protobuf-compiler libprotoc-dev
            git clone https://github.com/onnx/onnx.git --recursive
            export ONNX_ML=1
            cd onnx
            python setup.py install
            cd ..

      - run:
          name: Install onnxruntime
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install http://www.xavierdupre.fr/enseignement/setup/onnxruntime-0.3.0-cp37-cp37m-linux_x86_64.whl

      - run:
          name: install dependencies (1)
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements_conda.txt

      - run:
          name: Install skl2onnx
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install git+https://github.com/onnx/sklearn-onnx

      - run:
          name: install dependencies (2)
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: compile and build
          command: |
            . venv/bin/activate
            python setup.py build_ext --inplace

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py unittests -g ".*BENCH.*"

      - run:
          name: wheel
          command: |
            . venv/bin/activate
            python setup.py bdist_wheel
            mkdir -p test-reports/dist
            cp dist/*.whl test-reports/dist
            mkdir -p test-reports/src
            cp -r  src/pymlbenchmark test-reports/src

      - run:
          name: documentation
          command: |
            . venv/bin/activate
            python setup.py build_sphinx
            
      - run:
          name: copy documentation
          command: |
            mkdir -p test-reports/doc
            zip -r -9  test-reports/doc/documentation_html.zip _doc/sphinxdoc/build/html
            
      - store_artifacts:
          path: test-reports
          destination: test-reports